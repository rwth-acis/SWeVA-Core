/// <reference types="node" />
import { TransformArgs } from "./TransformArgs";
import { Transform } from "stream";
export declare class ObjectTransform<TIn, TOut> extends Transform {
    private enteredAsync;
    private endedAsync;
    private onSourceStreamError;
    constructor(args: TransformArgs<TIn, TOut>);
    _transform(chunk: TIn, encoding: string, callback: (error?: any) => void): void;
    _flush(callback: (error?: any) => void): void;
    private createOnSourceStreamError;
    private listenToSourceStreamErrors;
    private createEnteredAsync;
    private createEndedAsync;
    private getOnEnteredAsAsync;
    private getOnEndedAsAsync;
    private passThroughAsync;
    private finishAsync;
}
